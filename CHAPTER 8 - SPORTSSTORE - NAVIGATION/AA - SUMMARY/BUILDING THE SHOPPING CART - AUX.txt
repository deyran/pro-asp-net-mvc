BUILDING THE SHOPPING CART
	ADDING THE ADD TO CART BUTTONS
		Listing 8-13. Adding the Buttons to the Product Summary.cshtml File View


I need to edit the Views/Shared/ProductSummary.cshtml view to add the buttons to the product listings.
The changes are shown in Listing 8-13.

I added a Razor block that creates a small HTML form for each product in the listing. When this form is submitted,
it will invoke the AddToCart action method in the Cart controller (which I will implement in just a moment).

Note
â– 
By default, the BeginForm helper method creates a form that uses the http POST method. You can change this
so that forms use the GET method, but you should think carefully about doing so. the http specification requires that
GET requests must be idempotent, meaning that they must not cause changes, and adding a product to a cart is definitely
a change. i have more to say on this topic in Chapter 16, including an explanation of what can happen if you ignore the
need for idempotent GET requests.


CreatING MULtIpLe htML FOrMS IN a paGe
Using the Html.BeginForm helper in each product listing means that every Add to cart button is rendered in its
own separate htML form element. this may be surprising if you have been developing with aSp.Net Web Forms,
which imposes a limit of one form per page if you want to use the view state feature or complex controls (which
tend to rely on view state). Since aSp.Net MvC does not use view state, there is no limit the number of forms you
can create.
equally, there is no requirement to create a form for each button. however, since each form will post back to the
same controller method, but with a different set of parameter values, it is a nice and simple way to deal with the
button presses.

@model SportsStore.Domain.Entities.Product

<div class="well">
	<h3>
		<strong>@Model.Name</strong>
		<span class="pull-right label label-primary">@Model.Price.ToString("c")</span>
	</h3>

	@using (Html.BeginForm("AddToCart", "Cart"))
	{
		<div class="pull-right">
			@Html.HiddenFor(x => x.ProductID)
			@Html.Hidden("returnUrl", Request.Url.PathAndQuery)
			<input type="submit" class="btn btn-success" value="Add to cart" />
		</div>
	}
	
	<span class="lead">@Model.Description</span>
</div>
======================================================================

BUILDING THE SHOPPING CART
	DISPLAYING THE CONTENTS OF THE CART
		Listing 8-15. The Contents of the CartIndexViewModel.cs File
======================================================================

BUILDING THE SHOPPING CART
	DISPLAYING THE CONTENTS OF THE CART
		Listing 8-16. The Index Action Method in the CartController.cs File
======================================================================

BUILDING THE SHOPPING CART
	DISPLAYING THE CONTENTS OF THE CART
		Listing 8-17. The Contents of the Index.cshtml File
======================================================================

BUILDING THE SHOPPING CART
	DISPLAYING THE CONTENTS OF THE CART
		Figure 8-8. The Add to cart button
======================================================================

BUILDING THE SHOPPING CART
	DISPLAYING THE CONTENTS OF THE CART
		Figure 8-9. Displaying the contents of the shopping cart
======================================================================